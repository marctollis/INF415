## Genome Assembly Lab
# Modeled after Casey Dunn's Genome Assembly lab

# reference-based assembly of a microbial genome
# https://en.wikipedia.org/wiki/Thermus_thermophilus
# This lab will focus on a small genome and a small number of sequence reads,
# this is for convenience.
# A larger plant or animal genome would require:
# higher coverage (more reads)
# more memory (RAM)
# more compute time

# ssh into Monsoon with your credentials (don't forget to use the VPN if you are off campus)
# create a project directory in your scratch, fill in below. We will name this lab 'seqaln'

export PROJ_DIR=/scratch/userid/CompGenomicsCourse/fall22/seqaln

## Genome reference
# https://www.ncbi.nlm.nih.gov/genome/genomes/461

# chose one:
# ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/900/604/845/GCA_900604845.1_TTHNAR1

###############
## Genome setup
###############

#Get genome files
# first, create reference genome directory and download the files into it

mkdir -p $PROJ_DIR/genome && cd $PROJ_DIR/genome

wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/900/604/845/GCA_900604845.1_TTHNAR1/*

#unzip the DNA sequence & index

gunzip ./GCA_900604845.1_TTHNAR1_genomic.fna.gz

# create a symbolic link with a simpler name for the genome

ln -s GCA_900604845.1_TTHNAR1_genomic.fna Thermus_thermophilus_TTHNAR1.fa

# ls the contents of the alignment/ directory and copy/paste the output in your shell to the assignment.
# How many sequences are in the genome assembly for this bacterium?
# What cellular structures contain the genomic information (hint: look at the sequence names)?

#samtools index genome
# https://www.biostars.org/p/212594/
# Indexing a genome can be explained similar to indexing a book. 
# If you want to know on which page a certain word appears or a chapter begins, 
# it is much more efficient/faster to look it up in a pre-built index than going 
# through every page of the book until you found it. Same goes for alignments. 
# Indices allow the aligner to narrow down the potential origin of a query sequence 
# within the genome, saving both time and memory.

# Ben Langmead's video about indexing: 
# https://www.youtube.com/watch?v=5G2Db41pSHE&list=PL2mpR0RYFQsADmYpW2YWBrXJZ_6EL_3nu

module load samtools
srun samtools faidx Thermus_thermophilus_TTHNAR1.fa

# Why do we have to index a genome before mapping?

# picard dictionary for genome

module load picard

srun java -jar $PICARD CreateSequenceDictionary \
    REFERENCE=Thermus_thermophilus_TTHNAR1.fa \
    OUTPUT=Thermus_thermophilus_TTHNAR1.dict

# build bowtie2 genome index

module load bowtie2

srun bowtie2-build Thermus_thermophilus_TTHNAR1.fa Thermus_thermophilus_TTHNAR1

#####################
## Get sequence reads
#####################

# https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR5324768
# from "Recovery of nearly 8,000 metagenome-assembled genomes substantially expands the tree of life."
# Nat Microbiol. 2017 Nov;2(11):1533-1542. doi: 10.1038/s41564-017-0012-7. Epub 2017 Sep 11.

# get reads from SRA, put into project directory

cd $PROJ_DIR

mkdir fastq && cd fastq

export SRR=SRR5324768

wget https://github.com/Yale-EEB723/syllabus/raw/master/exercises/alignment/${SRR}_pass_1.fastq.gz
wget https://github.com/Yale-EEB723/syllabus/raw/master/exercises/alignment/${SRR}_pass_2.fastq.gz


# look at the first few lines of each file.
zcat SRR5324768_pass_1.fastq.gz | head
zcat SRR5324768_pass_2.fastq.gz | head 

# What are the read lengths?
# What do the 4 lines for each read in a fastq file indicate?
# Look at the read names for pass_1 and pass_2. What information is the same, and what is different?
# How do you explain the differences in the read names between the two files?


#####################
## Alignment Time!!!!
#####################

cd $PROJ_DIR

mkdir -p alignment

# http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml
# http://www.htslib.org/doc/samtools.html

# this step takes about 5 minutes on a typical Monsoon node

srun bowtie2 -x genome/Thermus_thermophilus_TTHNAR1 \
        -1 fastq/${SRR}_pass_1.fastq.gz \
        -2 fastq/${SRR}_pass_2.fastq.gz --sensitive-local \
        --rg-id ${SRR} --rg SM:${SRR} --rg PL:ILLUMINA \
    | samtools view -hb - | samtools sort -l 5 -o alignment/${SRR}.bam

# this set of commands involves the use of pipes. What is the utility of this?
# how many reads were were in the fastq files?
# how many reads aligned concordantly?
# what is the meaning of 'concordantly' and 'discordantly'?


srun samtools index alignment/${SRR}.bam

# text view alignment with 

samtools tview alignment/SRR5324768.bam genome/Thermus_thermophilus_TTHNAR1.fa

# type ? for help, q to quit
# pileup format - is a text-based format for summarizing the base calls of aligned reads to a reference sequence.
# what do the dots mean?
# what do the commas mean?
# what does uppercase mean?
# what does lowercase mean?
# what does an asterisk mean?
# what do colors mean?
# what does the underline mean?
# https://en.wikipedia.org/wiki/Pileup_format
# mapping quality: http://maq.sourceforge.net/qual.shtml#:~:text=What%20is%20Mapping%20Quality%3F,Phred%20is%20the%20mapping%20quality.

##########################
## Variant Calls with GATK
##########################
# https://software.broadinstitute.org/gatk/documentation/tooldocs/3.8-0/org_broadinstitute_gatk_tools_walkers_haplotypecaller_HaplotypeCaller.php
#This step may take 5-20 minutes depending on your hardware

cd $PROJ_DIR

mkdir -p variants

module load gatk

# we will give this job a little more RAM than the default since gatk gets hungry, 
# may take longer to allocate this job depending on cluster resource use.
# once allocated, this part will typically take ~15 minutes.

srun --mem=8G gatk --java-options "-Xmx8g" HaplotypeCaller  \
   --reference genome/Thermus_thermophilus_TTHNAR1.fa \
   --sample-ploidy 1 \
   --input alignment/${SRR}.bam \
   --output variants/${SRR}.vcf

# the output is in the variant call format (vcf)
# https://samtools.github.io/hts-specs/VCFv4.2.pdf
# VCF is a text file format (most likely stored in a compressed manner). 
# It contains meta-information lines, a header line, and then data lines 
# each containing information about a position in the genome. 
# The format also has the ability
# to contain genotype information on samples for each position.

# https://gatk.broadinstitute.org/hc/en-us/articles/360035531692-VCF-Variant-Call-Format

less variants/${SRR}.vcf

# scroll down past the headers using the arrow key
# look in the REF and ALT columns (4th and 5th) - what are the meanings of these columns and how do you interpret them?
# particularly LR027517.1:574 and LR027517.1:578

# look in the sample-level information (coliumns 9 and 10): why is GT always 1? 
# what would you expect the possibilities for GT to be if this were a human genome?
# why is AD always 0?
# What is the range for DP (just scroll up and down and give a resonable ballpark answer)?
# what does DP mean?
# What do you think this .vcf file be useful for in the future, if it was for your project?